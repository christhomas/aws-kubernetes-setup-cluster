#!/usr/bin/env sh

SERVICE=$1
DNS_RECORD=$2

if [[ -z ${SERVICE} ]]; then
    echo "The first parameter should be the kubernetes service in the format 'namespace/app-name', e.g: 'default/hello-node'"
    exit 1
fi

if [[ -z ${DNS_RECORD} ]]; then
    echo "The second parameter should be the domain name record you would like to use for this service"
    exit 2
fi

LOAD_BALANCERS=$(aws elb describe-load-balancers --query "LoadBalancerDescriptions[*].LoadBalancerName" | jq -r .[])

for LB in ${LOAD_BALANCERS}; do
    TEST_1=$(aws elb describe-tags --load-balancer-name "${LB}" | jq -r ".TagDescriptions[].Tags[] | select(.Value | contains(\"${CLUSTER}\")).Value")
    if [[ "${TEST_1}" != "${CLUSTER}" ]]; then continue; fi

    TEST_2=$(aws elb describe-tags --load-balancer-name "${LB}" | jq -r ".TagDescriptions[].Tags[] | select(.Value | contains(\"${SERVICE}\")).Value")
    if [[ "${TEST_2}" != "${SERVICE}" ]]; then continue; fi

    LB_DNS_NAME=$(aws elb describe-load-balancers --query "LoadBalancerDescriptions[?LoadBalancerName=='${LB}'].CanonicalHostedZoneName" | jq -r .[])
    LB_ZONE_ID=$(aws elb describe-load-balancers --query "LoadBalancerDescriptions[?LoadBalancerName=='${LB}'].CanonicalHostedZoneNameID" | jq -r .[])

    HOSTED_ZONE_ID=$(get-hosted-zone-id ${DOMAIN})

    TEMPLATE="{\"AliasTarget\":{\"HostedZoneId\":\"${LB_ZONE_ID}\",\"EvaluateTargetHealth\":false,\"DNSName\":\"dualstack.${LB_DNS_NAME}.\"},\"Type\":\"A\",\"Name\":\"${DNS_RECORD}.\"}"
    TEMPLATE=$(echo ${TEMPLATE} | jq -c .)

    echo "Creating 'A' record for kubernetes service '${SERVICE}' for the domain '${DNS_RECORD}', targetting the loadBalancer '${LB_DNS_NAME}' in zone '${LB_ZONE_ID}'"

    aws route53 change-resource-record-sets \
        --hosted-zone-id ${HOSTED_ZONE_ID} \
        --change-batch '{"Changes":[{"Action":"UPSERT","ResourceRecordSet":'"${TEMPLATE}"'}]}'
done